#
# This is the venv.sh's configuration file for the python distribution
# project.
PYTHON_VERSION='2.7.8+chevah1'
BINARY_DIST_URI='http://binary.chevah.com/python-distribution'
RUN_DEPENDENCIES_FOR_COMMANDS="deps test_os_dependent test_os_independent"
# We overwrite the build directory for paver as `build` is used as distro
# build directory.
BUILD_DIR='build-runtime'

#
# Custom paver/brink customization code starts here.
#
PAVER_VERSION='1.2.1'
# It requires a brink version newer than 0.56
BRINK_VERSION='0.56.0'
PIP_INDEX='http://pypi.chevah.com:10042'


#
# Called after venv.sh has done its initialization.
#
after_done() {
    run_paver "$@"
    exit_code=$?
    exit $exit_code
}

#
# Called after python was just installed.
#
after_python_install() {
    install_build_system
    # Also run initial deps.
    run_paver deps
}

#
# Called before installing/updating the python dependencies.
#
before_dependencies() {
    install_build_system
}

#
# Custom helper functions.
#

#
# Wrapper for python pip command.
# * $1 - command name
# * $2 - package_name and optional version.
#
pip() {
    set +e
    ${PYTHON_BIN} -m \
        pip.__init__ $1 $2 \
            --index-url=$PIP_INDEX/simple \
            --trusted-host pypi.chevah.com \
            --upgrade

    exit_code=$?
    set -e
    if [ $exit_code -ne 0 ]; then
        echo "Failed to run pip."
        exit 1
    fi
}

#
# Check that we have a pavement.py in the current dir.
# otherwise it means we are out of the source folder and paver can not be
# used there.
#
check_source_folder() {

    if [ ! -e pavement.py ]; then
        echo 'No pavement.py file found in current folder.'
        echo 'Make sure you are running paver from a source folder.'
        exit 1
    fi
}

#
# Install brink package.
#
install_build_system() {
    local update_packages="paver==$PAVER_VERSION"

    if [ "$BRINK_VERSION" = "skip" ]; then
        echo "Skipping brink installation."
    else
        update_packages="$update_packages chevah-brink==$BRINK_VERSION"
    fi

    echo "Updating build system: $update_packages"

    pip install "$update_packages"
}

run_paver() {
    check_source_folder

    echo $BUILD_DIR python${PYTHON_FAMILY} ${OS} ${ARCH} > DEFAULT_VALUES

    # Now that we have Python and Paver, let's call Paver from Python :)
    set +e
    ${PYTHON_BIN} -c 'from paver.tasks import main; main()' "$@"
    exit_code=$?
    set -e
    return $exit_code
}